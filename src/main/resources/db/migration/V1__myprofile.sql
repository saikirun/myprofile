SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS MP_USER_BASIC_INFO;
DROP TABLE IF EXISTS MP_USER_PREFS;
DROP TABLE IF EXISTS MP_USER_PROFILE_TRACKER;
DROP TABLE IF EXISTS MP_USER_PROFILE;
DROP TABLE IF EXISTS MP_USER;
DROP TABLE IF EXISTS MP_SIGNUP;




/* Create Tables */

CREATE TABLE MP_SIGNUP
(
	EMAIL_ID varchar(200) NOT NULL,
	PASSWORD varchar(200) NOT NULL,
	FIRST_NAME varchar(100) NOT NULL,
	LAST_NAME varchar(100) NOT NULL,
	DATE_CREATED datetime,
	ACTIVATION_CODE varchar(100) NOT NULL,
	STATUS int(1),
	PRIMARY KEY (EMAIL_ID)
);


CREATE TABLE MP_USER
(
	USER_ID varchar(200) NOT NULL,
	PASSWORD varchar(200) NOT NULL,
	-- 0- INACTIVE
	-- 1 - ACTIVE
	-- 2 - DISCARDED
	STATUS int NOT NULL COMMENT '0- INACTIVE
1 - ACTIVE
2 - DISCARDED',
	LAST_LOGIN_DT datetime NOT NULL,
	ROLE int(1),
	PRIMARY KEY (USER_ID)
);


CREATE TABLE MP_USER_BASIC_INFO
(
	USER_ID varchar(200) NOT NULL,
	FIRST_NAME varchar(100) NOT NULL,
	LAST_NAME varchar(100) NOT NULL,
	PHONE_NUM varchar(15),
	ADDRESS_LINE_ONE varchar(200),
	ADDRESS_LINE_TWO varchar(200),
	COUNTRY_ID varchar(3),
	STATE varchar(2),
	CITY varchar(100),
	ZIP int(10),
	PROFILE_IMAGE longblob
);


CREATE TABLE MP_USER_PREFS
(
	PREF_ID bigint(20) NOT NULL AUTO_INCREMENT,
	PREF_CODE varchar(25) NOT NULL,
	PREF_DESCRIPTION varchar(200),
	USER_ID varchar(200) NOT NULL,
	PRIMARY KEY (PREF_ID)
);


CREATE TABLE MP_USER_PROFILE
(
	USER_ID varchar(200) NOT NULL,
	PROFILE longblob NOT NULL,
	TRACKING_CODE varchar(100),
	UNIQUE (TRACKING_CODE)
);


CREATE TABLE MP_USER_PROFILE_TRACKER
(
	TRACKING_ID bigint(20) NOT NULL AUTO_INCREMENT,
	IP_ADDRESS varchar(20) NOT NULL,
	LINK_ACCESSD_DATE datetime NOT NULL,
	USER_ID varchar(100) NOT NULL,
	PRIMARY KEY (TRACKING_ID)
);



/* Create Foreign Keys */

ALTER TABLE MP_USER
	ADD FOREIGN KEY (USER_ID)
	REFERENCES MP_SIGNUP (EMAIL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MP_USER_BASIC_INFO
	ADD FOREIGN KEY (USER_ID)
	REFERENCES MP_USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MP_USER_PREFS
	ADD FOREIGN KEY (USER_ID)
	REFERENCES MP_USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MP_USER_PROFILE
	ADD FOREIGN KEY (USER_ID)
	REFERENCES MP_USER (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MP_USER_PROFILE_TRACKER
	ADD FOREIGN KEY (USER_ID)
	REFERENCES MP_USER_PROFILE (TRACKING_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



